{"version":3,"sources":["Components/Search/SearchBar.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/Search/SearchBar.js","pages/MoviesPage.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","alert","className","s","movieForm","movieSearch","type","autoComplete","autoFocus","placeholder","onChange","toLowerCase","movieButton","Movies","movies","setMovies","history","useHistory","location","useLocation","searchURL","URLSearchParams","search","get","useEffect","fetchSearchMovies","then","data","results","catch","error","setHistory","MoviesList"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,YAAc,+BAA+B,YAAc,+BAA+B,UAAY,+B,gCCDzG,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,iGCeMQ,MA5Cf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,uBAAMH,SAXa,SAACI,GACpBA,EAAMC,iBAEqB,KAAvBH,EAAYI,OAKhBN,EAASE,GAJPK,MAAM,4BAOsBC,UAAWC,IAAEC,UAA3C,UACE,gCACE,uBACEF,UAAWC,IAAEE,YACbC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZ1C,MAAO6B,EACPc,SAxBkB,SAACZ,GACzBD,EAAeC,EAAMb,OAAOlB,MAAM4C,oBA0BhC,wBAAQL,KAAK,SAASJ,UAAWC,IAAES,YAAnC,wB,gBC3BS,SAASC,IAAU,IAAD,EAC/B,EAA4BlB,mBAAS,MAArC,mBAAOmB,EAAP,KAAeC,EAAf,KACA,EAAsCpB,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMmB,EAAUC,cACVC,EAAWC,cAEXC,EAAS,UAAG,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,gBAA5C,QAAwD,GAEvEC,qBAAU,WACH5B,GAIL6B,YAAkB7B,GACf8B,MAAK,SAACC,GACAA,EAAKC,QAAQxC,OAIlB2B,EAAUY,EAAKC,SAHb3B,MAAM,6BAKT4B,OAAM,SAACC,GAAD,OAAW7B,MAAM,2CACzB,CAACL,IAEJ4B,qBAAU,WACU,KAAdJ,GAGJvB,EAAeuB,KACd,CAACA,IAcJ,OACE,qCACE,cAAC,EAAD,CAAW1B,SAPE,SAACE,GAChBC,EAAeD,GARE,SAACA,GAClBoB,EAAQlC,KAAR,OACKoC,GADL,IAEEI,OAAO,SAAD,OAAW1B,MAMnBmC,CAAWnC,MAMRkB,GAAU,cAACkB,EAAA,EAAD,CAAYlB,OAAQA","file":"static/js/movies-page.f8f766e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieButton\":\"SearchBar_movieButton__2qzJ6\",\"movieSearch\":\"SearchBar_movieSearch__1HHzn\",\"movieForm\":\"SearchBar_movieForm__ZU_PA\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./SearchBar.module.css\";\n\nfunction Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === \"\") {\n      alert(\"Please add search query\");\n      return;\n    }\n\n    onSubmit(searchQuery);\n  };\n  return (\n    <form onSubmit={handleSubmit} className={s.movieForm}>\n      <label>\n        <input\n          className={s.movieSearch}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchQuery}\n          onChange={handleInputChange}\n        ></input>\n      </label>\n      <button type=\"submit\" className={s.movieButton}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchbar.propTypes = {\n  value: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  handleInputChange: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nimport Searchbar from \"../Components/Search/SearchBar\";\nimport MoviesList from \"../Components/MoviesList/MoviesList\";\nimport { fetchSearchMovies } from \"../services/Api\";\n\nexport default function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchURL = new URLSearchParams(location.search).get(\"query\") ?? \"\";\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchSearchMovies(searchQuery)\n      .then((data) => {\n        if (!data.results.length) {\n          alert(\"No result:(  try again\");\n          return;\n        }\n        setMovies(data.results);\n      })\n      .catch((error) => alert(\"Smth went wrong:( please try again\"));\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchURL === \"\") {\n      return;\n    }\n    setSearchQuery(searchURL);\n  }, [searchURL]);\n\n  const setHistory = (searchQuery) => {\n    history.push({\n      ...location,\n      search: `query=${searchQuery}`,\n    });\n  };\n\n  const onSubmit = (searchQuery) => {\n    setSearchQuery(searchQuery);\n    setHistory(searchQuery);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n"],"sourceRoot":""}